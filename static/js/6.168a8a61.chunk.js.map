{"version":3,"sources":["js/client/home.page.js"],"names":["HomePage","useState","projects","setProjects","isLoading","setIsLoading","useEffect","getProjects","a","API","get","then","res","data","catch","err","toast","txtMsg","Display","div","initial","animate","exit","item","md","lg","variants","varfadeInRight","height","display","alignItems","variant","component","varWrapExit","mb","container","spacing","stateProject"],"mappings":"6PA0FeA,UA1EE,WAAO,IAAD,EACWC,mBAAS,IADpB,mBACdC,EADc,KACJC,EADI,OAEaF,oBAAS,GAFtB,mBAEdG,EAFc,KAEHC,EAFG,KAIrBC,qBAAU,WACRC,MACC,IAUH,IAAMA,EAAW,uCAAG,sBAAAC,EAAA,sEACZC,IAAIC,IAAI,YACXC,MAAK,SAACC,GACLT,EAAYS,EAAIC,MAChBR,GAAa,MAEdS,OAAM,SAACC,GACNC,YAAM,kBAAC,IAAD,CAAUC,OAAO,6BAPT,2CAAH,qDAWXC,EAAU,WACd,OACE,+GAMJ,OACE,oCACE,kBAAC,IAAOC,IAAR,CAAYC,QAAQ,UAAUC,QAAQ,QAAQC,KAAK,QACjD,kBAAC,IAAD,MAEA,kBAAC,IAAD,MAEClB,EAAY,kBAAC,IAAD,MAAkB,KAE/B,kBAAC,IAAD,KACE,kBAAC,IAAD,MAEA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAMmB,MAAI,EAACC,GAAI,EAAGC,GAAI,GACpB,kBAAC,IAAON,IAAR,CAAYO,SAAUC,KACpB,kBAAC,IAAD,CAAKC,OAAO,QAAQC,QAAQ,OAAOC,WAAW,UAC5C,kBAAC,IAAD,CAAYC,QAAQ,KAAKC,UAAU,MACjC,kBAACd,EAAD,SAKN,kBAAC,IAAOC,IAAR,CAAYO,SAAUO,KACpB,kBAAC,IAAD,CAAKC,GAAI,IACP,kBAAC,IAAD,CAAMC,WAAS,EAACC,QAAS,GACvB,kBAAC,IAAD,CAAaC,aAAcnC,UAQvC,kBAAC,IAAD","file":"static/js/6.168a8a61.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { motion } from \"framer-motion\";\nimport { toast } from \"react-toastify\";\nimport { Container, Grid, Box, Typography } from \"@material-ui/core\";\nimport { API } from \"../../config\";\nimport { varfadeInRight, varWrapExit, SmoothScrollbar } from \"../utilities\";\nimport {\n  Header,\n  BtnAvatar,\n  BtnDarkMode,\n  BgBody,\n  LoadingPage,\n  MsgError,\n} from \"../commons\";\nimport { ProjectList } from \"./project\";\n\nconst HomePage = () => {\n  const [projects, setProjects] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    getProjects();\n  }, []);\n\n  // useEffect(() => {\n  //   const timer = setTimeout(() => {\n  //     getProjects();\n  //   }, 1000);\n  //   return () => clearTimeout(timer);\n  // }, []);\n\n  // Get Projects\n  const getProjects = async () => {\n    await API.get(\"projects\")\n      .then((res) => {\n        setProjects(res.data);\n        setIsLoading(false);\n      })\n      .catch((err) => {\n        toast(<MsgError txtMsg=\"Get Projects Failed!\" />);\n      });\n  };\n\n  const Display = () => {\n    return (\n      <>\n        The creative designer with a passion for simple and functional design.\n      </>\n    );\n  };\n\n  return (\n    <>\n      <motion.div initial=\"initial\" animate=\"enter\" exit=\"exit\">\n        <BgBody />\n\n        <BtnDarkMode />\n\n        {isLoading ? <LoadingPage /> : null}\n\n        <SmoothScrollbar>\n          <Header />\n\n          <Container>\n            <Grid item md={8} lg={7}>\n              <motion.div variants={varfadeInRight}>\n                <Box height=\"100vh\" display=\"flex\" alignItems=\"center\">\n                  <Typography variant=\"h1\" component=\"h1\">\n                    <Display />\n                  </Typography>\n                </Box>\n              </motion.div>\n\n              <motion.div variants={varWrapExit}>\n                <Box mb={20}>\n                  <Grid container spacing={4}>\n                    <ProjectList stateProject={projects} />\n                  </Grid>\n                </Box>\n              </motion.div>\n            </Grid>\n          </Container>\n        </SmoothScrollbar>\n\n        <BtnAvatar />\n      </motion.div>\n    </>\n  );\n};\n\nexport default HomePage;\n"],"sourceRoot":""}